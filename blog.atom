<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"> <channel> <title></title> <description>Debezium is an open source distributed platform for change data capture. Start it up, point it at your databases, and your apps can start responding to all of the inserts, updates, and deletes that other apps commit to your databases. Debezium is durable and fast, so your apps can respond quickly and never miss an event, even when things go wrong.</description> <sy:updatePeriod>daily</sy:updatePeriod> <sy:updateFrequency>1</sy:updateFrequency> <link>https://debezium.io</link> <atom:link href="https://debezium.io/blog.atom" rel="self" type="application/rss+xml"/> <lastBuildDate>Sat, 23 Sep 2023 00:00:00 +0000</lastBuildDate> <item> <title>Online machine learning with the data streams from the database</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In &lt;a href=&quot;https://debezium.io/blog/2023/05/02/tensorflow-mnist-classification/&quot;&gt;the previous blog post&lt;/a&gt;, we have shown how to leverage Debezium to train neural-network model with the existing data from the database and use this pre-trained model to classify images newly stored into the database. In this blog post, we will move it one step further - we will use Debezium to create multiple data streams from the database and use one of the streams for continuous learning and to improve our model, and the second one for making predictions on the data. When the model is constantly improved or adjusted to recent data samples, this approach is known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Online_machine_learning&quot;&gt;online machine learning&lt;/a&gt;. Online learning is only suitable for some use cases, and implementing an online variant of a given algorithm may be challenging or even impossible. However, in situations where online learning is possible, it becomes a very powerful tool as it allows one to react to the changes in the data in real-time and avoids the need to re-train and re-deploy new models, thus saving the hardware and operational costs. As the streams of data become more and more common, e.g. with the advent of IoT, we can expect online learning to become more and more popular. It&amp;#8217;s usually a perfect fit for analyzing streaming data in use cases where it&amp;#8217;s possible.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Sat, 23 Sep 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/09/23/flink-spark-online-learning/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/09/23/flink-spark-online-learning/</guid> </item> <item> <title>Debezium 2.4.0.CR1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As the summer concludes for us in the north and we await the autumn colors, the team has been busy preparing for the next major release of Debezium 2.4. It&amp;#8217;s my pleasure to announce today that we are nearly there with the release of Debezium &lt;strong&gt;2.4.0.CR1&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The focus for this release is primarily on stability; however, we do have a few new last minute addititons that we should highlight, so let&amp;#8217;s dive right in, shall we?!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!- more -&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;breaking_changes&quot;&gt;Breaking changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The community led Vitess connector was retrying only a subset of errors by default. This behavior has been changed and now only explicitly defined errors are not retried. For more details, please see &lt;a href=&quot;https://issues.redhat.com&quot;&gt;DBZ-6944&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;new_features&quot;&gt;New Features&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;mongodb_parallel_incremental_snapshots&quot;&gt;MongoDB parallel incremental snapshots&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Since the introduction of incremental snapshots back in Debezium 1.x, the process to incremental snapshot existing data while concurrently capturing changes from a database transaction has been a single-threaded activity. It&amp;#8217;s not uncommon when adding new features to focus on the basics and build upon that foundation, which is precisely what has happened with MongoDB.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In Debezium 2.4, we are taking the first steps to add parallel support to incremental snapshots with the MongoDB connector by reading multiple chunks in parallel. This should allow faster throughput at the cost of memory while the chunks are being collected, sorted, and deduplication occurs against the transaction log capture data set. Thanks to &lt;a href=&quot;https://github.com/xidui&quot;&gt;Yue Wang&lt;/a&gt; for starting this effort in &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6518&quot;&gt;DBZ-6518&lt;/a&gt;, it&amp;#8217;s most definitely something we are looking to explore for the relational connectors in an upcoming Debezium release.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;postgresql_16_support&quot;&gt;PostgreSQL 16 support&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;PostgreSQL announced the immediate release for PostgreSQL 16 just over a week ago, and we&amp;#8217;re pleased to announce that Debezium 2.4 will support that release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock note&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;PostgreSQL 16 introduces logical replication from standby servers; however, this feature has not yet been tested by Debezium and will be a feature introduced in a later build of Debezium. For now, logical replication remains only supported via the primary.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;google_spanner_gke_workload_identity_support&quot;&gt;Google Spanner GKE workload identity support&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Google Kubernetes Engine (GKE) supports identity workloads, allowing you to use a more secure authentication mechanism than the traditional JSON-based keys. In Debezium 2.4, when no JSON key is explicitly set, the Spanner connector will now automatically default to GKE workload identity authentication. Thanks to &lt;a href=&quot;https://github.com/laughingman7743&quot;&gt;laughingman7743&lt;/a&gt; for this effort as a part of &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6885&quot;&gt;DBZ-6885&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes&quot;&gt;Other Fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Ad-hoc blocking snaps trigger emits schema changes of all tables &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6828&quot;&gt;DBZ-6828&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;When the start_scn corresponding to the existence of a transaction in V$TRANSACTION is 0, log mining starts from the oldest scn when the oracle connector is started for the first time &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6869&quot;&gt;DBZ-6869&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Ensure that the connector can handle rebalance events robustly &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6870&quot;&gt;DBZ-6870&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;OpenLogReplicator confirmation can resend or omit events on restarts &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6895&quot;&gt;DBZ-6895&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ExtractNewRecordState&amp;#8217;s schema cache is not updated with arrival of the ddl change event &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6901&quot;&gt;DBZ-6901&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Misleading Debezium error message when RDI port is not specified in application.properties &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6902&quot;&gt;DBZ-6902&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Generting protobuf files to target/generated-sources breaks build &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6903&quot;&gt;DBZ-6903&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Clean log printout in Redis Debezium Sink &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6908&quot;&gt;DBZ-6908&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Values being omitted from list of JSON object &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6910&quot;&gt;DBZ-6910&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;fix logger named &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6935&quot;&gt;DBZ-6935&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySql connector get NPE when snapshot.mode is set to never and signal data collection configured &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6937&quot;&gt;DBZ-6937&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Sanity check / retry for redo logs does not work per Oracle RAC thread &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6938&quot;&gt;DBZ-6938&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Drop events has wrong table changes information &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6945&quot;&gt;DBZ-6945&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Remove spaces from Signal and Notification MBean&amp;#8217;s ObjectName &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6957&quot;&gt;DBZ-6957&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.4.0.CR1%20ORDER%20BY%20component%20ASC&quot;&gt;20 issues&lt;/a&gt; were fixed for this release. A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/BigGillyStyle&quot;&gt;Andy Pickler&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/brenoavm&quot;&gt;Breno Moreira&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/indraraj&quot;&gt;Indra Shukla&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/mfvitale&quot;&gt;Mario Fiore Vitale&lt;/a&gt;, &lt;a href=&quot;https://github.com/nancyxu123&quot;&gt;Nancy Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/nirolevy&quot;&gt;Nir Levy&lt;/a&gt;, &lt;a href=&quot;https://github.com/obabec&quot;&gt;Ondrej Babec&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/eizners&quot;&gt;Sergey Eizner&lt;/a&gt;, &lt;a href=&quot;https://github.com/twthorn&quot;&gt;Thomas Thornton&lt;/a&gt;, &lt;a href=&quot;https://github.com/wuzhenhua01&quot;&gt;Wu Zhenhua&lt;/a&gt;, Zheng Wang, &lt;a href=&quot;https://github.com/laughingman7743&quot;&gt;laughingman7743&lt;/a&gt;, and &lt;a href=&quot;https://github.com/tisonkun&quot;&gt;tison&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;outlook_and_whats_next&quot;&gt;Outlook and What&amp;#8217;s next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We&amp;#8217;re now at the junction where we begin to set our vision on Debezium 2.5 and what lies ahead. We recently held our first Community Meeting and discussed a number of our 2.5 roadmap ideas, some of which include:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Parallel incremental snapshots for relational connectors.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improved MongoDB support for BSONDocument exceeding 16MB.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Db2 support on z/OS and iSeries platforms.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Batch support in the JDBC sink connector.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Parallelization of tasks and other Debezium Engine internals.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Preview of MariaDB and Oracle 23 support&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For more details, please check out our &lt;a href=&quot;https://debezium.io/roadmap&quot;&gt;road map&lt;/a&gt; for all upcoming details around Debezium 2.5 and beyond.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Additionally, Debezium will be at &lt;a href=&quot;https://www.confluent.io/events/current/&quot;&gt;Current 2023&lt;/a&gt; next week. If you are attending, be sure to stop by the Ask-The-Experts session on Wednesday at 2:30PM to catch a sesssion on Debezium and Kafka. Additionally, be sure to check out the sponsored session on Wednesday at 4:30PM to find out just how easy it is to deploy data pipelines from the edge to the cloud using open-source projects such as Debezium, Strimzi, Apicurio, and Kubernetes.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As always, if you have any questions, suggestions, or feedback, please reach out to us on our &lt;a href=&quot;https://groups.google.com/g/debezium&quot;&gt;mailing list&lt;/a&gt; or &lt;a href=&quot;https://debezium.zulipchat.com/login/#narrow/stream/302529-users&quot;&gt;chat&lt;/a&gt;. We always enjoy hearing what you have to share. Until next time, be safe.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</description> <pubDate>Fri, 22 Sep 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/09/22/debezium-2-4-cr1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/09/22/debezium-2-4-cr1-released/</guid> </item> <item> <title>Debezium 2.4.0.Beta2 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It has been nearly two weeks since our last preview release of the Debezium 2.4 series, and I am thrilled to announcement the next installation of that series, Debezium &lt;strong&gt;2.4.0.Beta2&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;While typically beta releases focus on stability and bugs, this release includes quite a number of noteworthy improves and new features including a new ingestion method for Oracle using OpenLogReplicator, a new single message transform to handle timezone conversions, custom authentication support for MongoDB, configurable order for the MongoDB aggregation pipeline, and lastly support for MongoDB 7.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take a few moments and dive into all these new features, improvements, and changes in more detail.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Wed, 13 Sep 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/09/13/debezium-2-4-beta2-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/09/13/debezium-2-4-beta2-released/</guid> </item> <item> <title>Enable pass-through of additional properties in Debezium UI</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium UI team continues to add support for more features, allowing users to configure connectors more easily. In this article, we&amp;#8217;ll describe and demonstrate how to provide the additional properties for configuration that the UI does not expose by default. Read further for more information!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Sun, 10 Sep 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/09/10/Debezium-UI-connectors-custom-property/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/09/10/Debezium-UI-connectors-custom-property/</guid> </item> <item> <title>Debezium 2.3.3.Final Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It is my pleasure to announce the immediate release of Debezium &lt;strong&gt;2.3.3.Final&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes several bug fixes to address regressions, stability, documentation updates. If you are currently looking to upgrade to the Debezium 2.3.x release stream, we highly recommend you consider using this release. Let&amp;#8217;s take a quick look into the regressions and bug fixes.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/09/05/debezium-2-3-3-final-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/09/05/debezium-2-3-3-final-released/</guid> </item> <item> <title>Debezium 2.4.0.Beta1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;While development remains steadfast as we continue forward on Debezium 2.4, I am thrilled to announce the immediate availability of Debezium &lt;strong&gt;2.4.0.Beta1&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;While this release focuses on stability and bug fixes, there are several new noteworthy features including TimescaleDB support, JMX notifications using JSON payloads, multiple improvements to the Oracle connector&amp;#8217;s metrics and embedded Infinispan buffer implementation, SQL Server heartbeats, Vitess shardless strategy, JDBC sink with SQL Server identity-based inserts, and much more. Let&amp;#8217;s dive into each of thees new features and others in more detail.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/08/29/debezium-2-4-beta1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/08/29/debezium-2-4-beta1-released/</guid> </item> <item> <title>Debezium 2.4.0.Alpha2 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Despite summer being well underway, Debezium contributors remain hard at work, and it&amp;#8217;s my pleasure to announce the next preview release of Debezium 2.4 series, &lt;strong&gt;2.4.0.Alpha2&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This preview release includes a mix of improvements, bug fixes, and new features that are available for the Debezium community to test and offer feedback. Some highlights from this release include ad-hoc blocking snapshots, source-to-sink column name propagation, support for alternative MySQL drivers, and all Cassandra connectors with Debezium Server. Let&amp;#8217;s take a few moments and dive into these and others.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#breaking-changes&quot;&gt;Breaking changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#new-features&quot;&gt;New features&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#other-changes&quot;&gt;Other changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#whats-next&quot;&gt;What&amp;#8217;s next&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;breaking-changes&quot;&gt;Breaking changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;debezium_server_and_cassandra_connectors&quot;&gt;Debezium Server and Cassandra connectors&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For Cassandra connector users who may have been using Debezium Server or who may have wanted to use Debezium Server, we previously only shipped Cassandra 4 with the Debezium Server distribution. With Debezium 2.4, we now include all three Cassandra connector variants with the distribution, meaning that Cassandra 3 and DSE can now be used directly.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;However, for this to work, a new environment variable &lt;code&gt;EXTRA_CONNECTOR&lt;/code&gt; was introduced to specify specifically which Cassandra connector variant should be used by Debezium Server. This means that if you were using Cassandra 4 with Debezium Server, you must include this environment variable when upgrading to have the same configuration continue to work as it did in prior versions.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This new environment variable should be set to &lt;code&gt;dse&lt;/code&gt;, &lt;code&gt;cassandra-3&lt;/code&gt;, or &lt;code&gt;cassandra-4&lt;/code&gt; depending on the Cassandra version you intend to use for your Debezium Server source connector.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;mysql_bigint_precision_changed&quot;&gt;MySQL BIGINT precision changed&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium for MySQL connector was not properly setting the precision for &lt;code&gt;BIGINT&lt;/code&gt; data types when configuring the connector with &lt;code&gt;bigint.unsigned.handling.mode&lt;/code&gt; as &lt;code&gt;precise&lt;/code&gt;. Unfortunately, this led to a situation where the schema for such fields did not include the correct precision value.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.4 includes &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6714&quot;&gt;DBZ-6714&lt;/a&gt;, which provides a fix to address the incorrect precision for such fields. This can lead to schema incompatibilities when using schema registry, so you may need to adjust your compatibility settings or take other actions if you need to use strict compatibility rules.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;oracle_snapshot_and_query_fetch_sizes_increased&quot;&gt;Oracle snapshot and query fetch sizes increased&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.4 introduces a change in the default values for the &lt;code&gt;snapshot.fetch.size&lt;/code&gt; and the &lt;code&gt;query.fetch.size&lt;/code&gt; Oracle connector configuration properties. Previously, these properties used a default of &lt;code&gt;2000&lt;/code&gt;; however, thanks to a community contributor, it was identified that these values may likely be too low for production use.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With this release, the Oracle connector will now use a default of &lt;code&gt;10000&lt;/code&gt; for both properties, which should have a positive improvement on throughput for most users who were not explicitly setting these values. If you were previously using custom values for these settings in your connector configurations, then you will not see a change in your existing behavior. Only users who previously were not explicitly setting these values will notice that the new defaults will be used.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock note&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;These configuration properties are meant to act as tuning knobs, as a specific configuration for one JDBC environment may not work as well in a different environment. While we believe this change will have no negative impact, if you do notice a drop in performance, you can add these properties to your connector configuration setting them to their previous defaults of &lt;code&gt;2000&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;vitess_incorrectly_mapped_bin_columns&quot;&gt;Vitess incorrectly mapped &lt;code&gt;_bin&lt;/code&gt; columns&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For collations that end with the &lt;code&gt;_bin&lt;/code&gt; designator, Vitess maps these to a data type of &lt;code&gt;VARBINARY&lt;/code&gt;. As a result, the Vitess connector was inferring that these columns should be emitted as binary data; however, for character-based columns that used such collations, this was incorrect.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.4 will now properly emit character-based columns that are collated with a &lt;code&gt;_bin&lt;/code&gt; designator as string-based data rather than binary data. This means that if you are using schema registry, you may observe somee schema incompatibilities and you may need to adjust your compatibility settings or take other actions to mitigate this change.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;new-features&quot;&gt;New Features&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;ad_hoc_blocking_snapshots&quot;&gt;Ad-hoc blocking snapshots&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Incremental snapshots were first introduced nearly two years ago in Debezium 1.6 and has remained quite popular in the community to deal with a variety of re-snapshot use cases. However, there are some use cases where the intertwined nature of read events with create, updates, and deletes may be less than ideal or even not supported by some consumer application. For those use cases, Debezium 2.4 introduces ad-hoc blocking snapshots.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;An ad-hoc blocking snapshot works in a similar way that ad-hoc incremental snapshots work; however, with one major difference. The snapshot is still triggered by sending a signal to Debezium; however when the signal is processed by the connector, the key difference is that streaming is put on hold while the snapshot process runs. This means you won&amp;#8217;t be receiving a series of read events interwoven with create, update, or delete events. This also means that we&amp;#8217;ll be processing the snapshot in a similar way to traditional snapshots, so the throughput should generally be higher than incremental snapshots.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock important&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-important&quot; title=&quot;Important&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Be aware that ad-hoc blocking snapshots puts the reading of the transaction logs on hold while the snapshot is performed. This means the same requirements that a traditional snapshot has on transaction log availability also applies when using this type of ad-hoc snapshot mode. When streaming resumes, if a transaction log that is needed has since been removed, the connector will raise an error and stop.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The signal to initiate an ad-hoc blocking snapshot is very similar to its ad-hoc incremental snapshot counterpart. The following signal below shows the payload to snapshot a specific table with a condition, but this uses the new blocking snapshot rather than the incremental snapshot:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;execute-snapshot&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;data-collections&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;public.my_table&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;], &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;BLOCKING&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt; &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;additional-condition&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;last_update_date &amp;gt;= '2023-01-01'&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;colist arabic&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt; &lt;td&gt;The use of &lt;code&gt;BLOCKING&lt;/code&gt; rather than &lt;code&gt;INCREMENTAL&lt;/code&gt; differentiates the two ad-hoc snapshot modes.&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;source_to_sink_column_name_propagation&quot;&gt;Source-to-sink column name propagation&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Normally column names map directly to field names and vice versa when consumed by sink connectors such as a JDBC connector. However, there are situations where the serialization technology, such as Avro, has very specific rules about field naming conventions. When a column&amp;#8217;s name in a database table conflicts with the serialization rule&amp;#8217;s naming conventions, Debezium will rename the field in the event so that it adheres to the serialization&amp;#8217;s rules. This often means that a field will be prepended with underscores or invalid characters replaced with underscores.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This can create problems for certain types of sinks, such as a JDBC sink connector, because the sink cannot easily deduce the original column name for the destination table nor can it adequately map between the event&amp;#8217;s field name and a column name if they differ. This typically means users must use transformation chains on the sink side in order to reconstruct the event&amp;#8217;s fields with namings that represent the source.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.4 introduces a way to minimize and potentially avoid that entirely by propagating the original column name as a field schema parameter, much in the same way that we do for data types, precision, scale, and length. The schema parameter &lt;code&gt;__debezium.source.column.name&lt;/code&gt; now includes the original column name when column or data type propagation is enabled.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock tip&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-tip&quot; title=&quot;Tip&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium JDBC sink connector already works with column and data type propagation, allowing for the sink connector to more accurately deduce column types, length, precision, and scale.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With this new feature, the JDBC sink connector will automatically use the column name from this argument when it is provided to guarantee that the destination table will be created with the same column names as the source, even when using Avro or similar. This means no transformations are needed when using the Debezium JDBC sink connector.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;alternative_mysql_jdbc_drivers&quot;&gt;Alternative MySQL JDBC drivers&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In order to use IAM authentication on AWS, a special MySQL driver is required to provide that type of functionality. With Debezium 2.4, you can now provide a reference to this specific driver and the connector will use that driver instead of the default driver shipped with the connector.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As an example, to connect using IAM authentication on AWS, the following configuration is needed:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;text&quot;&gt;database.jdbc.driver=software.aws.rds.jdbc.mysql.Driver database.jdbc.protocol=jdbc:mysql:aws&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The &lt;code&gt;database.jdbc.driver&lt;/code&gt; specifies the driver that should be loaded by the connector and used to communicate with the MySQL database. The &lt;code&gt;database.jdbc.protocol&lt;/code&gt; is a supplemental configuration property that may not be required in all contexts. It defaults to &lt;code&gt;jdbc:mysql&lt;/code&gt; but since AWS requires &lt;code&gt;jdbc:mysql:aws&lt;/code&gt;, this allows you to specify this derivative within the configuration.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We&amp;#8217;ve love to hear feedback and whether something like this might be useful for other scenarios.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other-changes&quot;&gt;Other fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, there were quite a number of stability and bug fixes that made it into this release. These include the following:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Switch tracing to OpenTelemetry &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-2862&quot;&gt;DBZ-2862&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Connector drop down causes a scroll bar &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5421&quot;&gt;DBZ-5421&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Provide outline for drawer component showing connector details &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5831&quot;&gt;DBZ-5831&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Modify scroll for the running connector component &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5832&quot;&gt;DBZ-5832&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Connector restart regression &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6213&quot;&gt;DBZ-6213&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Highlight information about how to configure the schema history topic to store data only for intended tables &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6219&quot;&gt;DBZ-6219&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Document Optimal MongoDB Oplog Config for Resiliency &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6455&quot;&gt;DBZ-6455&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JDBC Schema History: When the table name is passed as dbName.tableName, the connector does not start &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6484&quot;&gt;DBZ-6484&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Update the Edit connector UI to incorporate the feedback received from team in demo &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6514&quot;&gt;DBZ-6514&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support blocking ad-hoc snapshots &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6566&quot;&gt;DBZ-6566&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add new parameters to RabbitMQ consumer &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6581&quot;&gt;DBZ-6581&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Document read preference changes in 2.4 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6591&quot;&gt;DBZ-6591&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle DDL parser does not properly detect end of statement when comments obfuscate the semicolon &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6599&quot;&gt;DBZ-6599&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Received an unexpected message type that does not have an 'after' Debezium block &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6637&quot;&gt;DBZ-6637&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;When Debezium Mongodb connector encounter authentication or under privilege errors, the connection between debezium and mongodb keeps going up. &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6643&quot;&gt;DBZ-6643&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Log appropriate error when JDBC connector receive SchemaChange record &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6655&quot;&gt;DBZ-6655&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Send tombstone events when partition queries are finished &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6658&quot;&gt;DBZ-6658&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Snapshot will not capture data when signal.data.collection is present without table.include.list &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6669&quot;&gt;DBZ-6669&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Retriable operations are retried infinitely since error handlers are not reused &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6670&quot;&gt;DBZ-6670&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle DDL parser does not support column visibility on ALTER TABLE &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6677&quot;&gt;DBZ-6677&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Propagate source column name and allow sink to use it &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6684&quot;&gt;DBZ-6684&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Partition duplication after rebalances with single leader task &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6685&quot;&gt;DBZ-6685&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JDBC Sink Connector Fails on Loading Flat Data Containing Struct Type Fields from Kafka &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6686&quot;&gt;DBZ-6686&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;SQLSyntaxErrorException using Debezium JDBC Sink connector &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6687&quot;&gt;DBZ-6687&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Should use topic.prefix rather than connector.server.name in MBean namings &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6690&quot;&gt;DBZ-6690&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CDC - Debezium x RabbitMQ - Debezium Server crashes when an UPDATE/DELETE on source database (PostgreSQL) &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6691&quot;&gt;DBZ-6691&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Missing operationTime field on ping command when executed against Atlas &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6700&quot;&gt;DBZ-6700&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MongoDB SRV protocol not working in Debezium Server &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6701&quot;&gt;DBZ-6701&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Disable jdk-outreach-workflow.yml in forked personal repo &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6702&quot;&gt;DBZ-6702&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Custom properties step not working correctly in validation of the properties added by user &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6711&quot;&gt;DBZ-6711&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add tzdata-java to UI installation Dockerfile &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6713&quot;&gt;DBZ-6713&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Refactor EmbeddedEngine::run method &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6715&quot;&gt;DBZ-6715&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle fails to process a DROP USER &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6716&quot;&gt;DBZ-6716&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support alternative JDBC drivers in MySQL connector &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6727&quot;&gt;DBZ-6727&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle LogMiner mining distance calculation should be skipped when upper bounds is not within distance &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6733&quot;&gt;DBZ-6733&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add STOPPED and RESTARTING connector states to testing library &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6734&quot;&gt;DBZ-6734&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MariaDB: Unparseable DDL statement (ALTER TABLE IF EXISTS) &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6736&quot;&gt;DBZ-6736&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Update Quarkus to 3.2.3.Final &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6740&quot;&gt;DBZ-6740&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Decouple Debezium Server and Extension Quarkus versions &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6744&quot;&gt;DBZ-6744&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;SingleProcessor remove redundant filter logic &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6745&quot;&gt;DBZ-6745&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL dialect does not properly recognize non-default value longblob types due to typo &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6753&quot;&gt;DBZ-6753&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add a new parameter for selecting the db index when using Redis Storage &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6759&quot;&gt;DBZ-6759&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Postgres tests for toasted byte array and toasted date array fail with decoderbufs plugin &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6767&quot;&gt;DBZ-6767&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Table schemas should be updated for each shard individually &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6775&quot;&gt;DBZ-6775&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Notifications and signals leaks between MBean instances when using JMX channels &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6777&quot;&gt;DBZ-6777&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle XML column types are not properly resolved when adding XMLTYPE column during streaming &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6782&quot;&gt;DBZ-6782&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Bump the MySQL binlog client version to 0.28.1 which includes significant GTID event performance improvements &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6783&quot;&gt;DBZ-6783&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add new Redis Sink connector parameter description to the documentation &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6784&quot;&gt;DBZ-6784&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade Kafka to 3.5.1 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6785&quot;&gt;DBZ-6785&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.4.0.Alpha2%20ORDER%20BY%20component%20ASC&quot;&gt;62 issues&lt;/a&gt; were fixed for this release. A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/TyrantLucifer&quot;&gt;Chao Tian&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/C0urante&quot;&gt;Chris Egerton&lt;/a&gt;, &lt;a href=&quot;https://github.com/vidourem&quot;&gt;David Remy&lt;/a&gt;, &lt;a href=&quot;https://github.com/faihofu&quot;&gt;Fai Ho Fu&lt;/a&gt;, &lt;a href=&quot;https://github.com/gurpiarbassi&quot;&gt;Gurps Bassi&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/indraraj&quot;&gt;Indra Shukla&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/joschi&quot;&gt;Jochen Schalanda&lt;/a&gt;, &lt;a href=&quot;https://github.com/mfvitale&quot;&gt;Mario Fiore Vitale&lt;/a&gt;, &lt;a href=&quot;https://github.com/mfortunat&quot;&gt;Massimo Fortunat&lt;/a&gt;, &lt;a href=&quot;https://github.com/nancyxu123&quot;&gt;Nancy Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/benesch&quot;&gt;Nikhil Benesch&lt;/a&gt;, &lt;a href=&quot;https://github.com/paul-cheung&quot;&gt;Paul Cheung&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/ironakj&quot;&gt;Ronak Jain&lt;/a&gt;, &lt;a href=&quot;https://github.com/ryanvanhuuksloot&quot;&gt;Ryan van Huuksloot&lt;/a&gt;, &lt;a href=&quot;https://github.com/eizners&quot;&gt;Sergey Eizner&lt;/a&gt;, &lt;a href=&quot;https://github.com/twthorn&quot;&gt;Thomas Thornton&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, &lt;a href=&quot;https://github.com/j2gg0s&quot;&gt;Yanjie Wang&lt;/a&gt;, &lt;a href=&quot;https://github.com/Ychopada&quot;&gt;Yashashree Chopada&lt;/a&gt;, &lt;a href=&quot;https://github.com/vidourem&quot;&gt;david remy&lt;/a&gt;, and &lt;a href=&quot;https://github.com/ibnubay&quot;&gt;ibnubay&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats-next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium 2.4 series is already packed with lots of new features, and we&amp;#8217;re only scratching the surface. We have more in-store, including the new Oracle OpenLogReplicator adapter coming with Debezium 2.4 Alpha3 next week. After that, we&amp;#8217;ll begin to wind down the development and shift our focus in the beta and release candidate cycle, targeting the end of September for a Debezium 2.4 final release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Don&amp;#8217;t forget about the Debezium Community Event, which I shared with you on the &lt;a href=&quot;https://groups.google.com/g/debezium&quot;&gt;mailing list&lt;/a&gt;. If you have any ideas or suggestions, I&amp;#8217;d love your feedback. We will be making an announcement in the next two weeks about the date/time and agenda.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Additionally, if you&amp;#8217;re going to Current 2023 this year in San Jose, I&amp;#8217;d love to meet up and discuss your experiences with Debezium. I&amp;#8217;ll be there doing a talk on event-driven design with Debezium and Apicurio with my good friends Hans-Peter Grahsl and Carles Arnal. If you&amp;#8217;re interested in more details, feel free to drop me a line in chat, on the mailing list or directly via email.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As always, if you have any ideas or suggestions, you can also get in touch with us on the &lt;a href=&quot;https://groups.google.com/g/debezium&quot;&gt;mailing list&lt;/a&gt; or our &lt;a href=&quot;https://debezium.zulipchat.com/login/#narrow/stream/302529-users&quot;&gt;chat&lt;/a&gt;. Until next time, don&amp;#8217;t be a stranger and stay cool out there!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</description> <pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/08/09/debezium-2-4-alpha2-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/08/09/debezium-2-4-alpha2-released/</guid> </item> <item> <title>Debezium 2.3.2.Final Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It is my pleasure to announce the immediate release of Debezium &lt;strong&gt;2.3.2.Final&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes several bug fixes to address regressions, stability, documentation updates. If you are currently looking to upgrade to the Debezium 2.3.x release stream, we highly recommend you consider using this release. Let&amp;#8217;s take a quick look into the regressions and bug fixes.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/08/04/debezium-2-3-2-final-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/08/04/debezium-2-3-2-final-released/</guid> </item> <item> <title>Debezium 2.3.1.Final Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It has been several weeks since we released the first installment of Debezium 2.3, and I&amp;#8217;m excited to announce the next iteration of Debezium 2.3 with &lt;strong&gt;2.3.1.Final&lt;/strong&gt;. As with any micro-release, the focus is on stability and bug fixes, as well as adjustments to our documentation; however there are some changes that are noteworthy that I would like to take a few moments to highlight.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/07/27/debezium-2-3-1-final-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/07/27/debezium-2-3-1-final-released/</guid> </item> <item> <title>Debezium 2.4.0.Alpha1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s been a busy month in Debezium-land, and it&amp;#8217;s my pleasure to announce the first release of Debezium 2.4 series, &lt;strong&gt;2.4.0.Alpha1&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes a plethora of changes, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.4.0.Alpha1&quot;&gt;59 changes&lt;/a&gt; to be exact, that cover a wide range of resolved issues, improvement to stability, new features, and several breaking changes. Let&amp;#8217;s dive into each of these and discuss them in more depth.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#breaking-changes&quot;&gt;Breaking changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#new-features&quot;&gt;New features&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#other-changes&quot;&gt;Other changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;breaking-changes&quot;&gt;Breaking changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;mongodb&quot;&gt;MongoDB&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The MongoDB connector explicitly preferred to use the secondary under specific scenarios previously. This explicit usage created problems for users who wanted to connect to the primary node. Thanks to recent changes (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6521&quot;&gt;DBZ-6521&lt;/a&gt;), this is no longer the case and the connection string setting is used instead.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;vitess&quot;&gt;Vitess&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Vitess connector&amp;#8217;s change event structure has been slightly adjusted thanks to changes (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6617&quot;&gt;DBZ-6617&lt;/a&gt;). The change event&amp;#8217;s &lt;code&gt;source&lt;/code&gt; information block now includes a new field that identifies the shard the event originated from.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;new-features&quot;&gt;New Features&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;offset_editor_example&quot;&gt;Offset editor example&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Users often express the need to manipulate connector offsets for various reasons. This can often be very difficult for those who may not be familiar with Kafka&amp;#8217;s CLI tools or Java if you use Debezium Server. Thanks to a contribution (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6338&quot;&gt;DBZ-6338&lt;/a&gt;) by Nathan Smit, you can now use an editor to manipulate the offsets from the command line or a web-based interface.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Head to our &lt;a href=&quot;https://github.com/debezium/debezium-examples/tree/main/offset-editor&quot;&gt;examples repository&lt;/a&gt; and follow the &lt;code&gt;README.md&lt;/code&gt; to get started.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;error_handling&quot;&gt;Error handling&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Some Debezium connectors previously used a connector property, &lt;code&gt;errors.max.retries&lt;/code&gt;. This property controlled how often a Debezium connector failure exception would be explicitly wrapped in a &lt;code&gt;RetriableException&lt;/code&gt; but the connector threw the raw exception up to the runtime. While this may sound similar to Kafka Connect&amp;#8217;s &lt;code&gt;errors.retry.timeout&lt;/code&gt;, this effectively gave users a common way to deal with retries across multiple Debezium runtimes, including Kafka Connect, Debezium Server, and Debezium Embedded.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With this release, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6573&quot;&gt;DBZ-6573&lt;/a&gt; unifies this behavior making it available to all connectors.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;notify_initial_snapshot_progress&quot;&gt;Notify initial snapshot progress&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium&amp;#8217;s new notification subsystem provides an easy way to integrate third-party tools and applications with Debezium to gain insight into the ongoing change data capture process, above and beyond the traditional JMX approach. In 2.4, the notification subsystem now includes the ability to notify you about the status of the ongoing initial snapshot (&lt;a href=&quot;https://issues.redhat.com/browse?DBZ-6416&quot;&gt;DBZ-6416&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Initial snapshot notifications are emitted with an &lt;code&gt;aggregatetType&lt;/code&gt; of &lt;code&gt;Initial Snapshot&lt;/code&gt; and contain a &lt;code&gt;type&lt;/code&gt; field that exposes the current status of the snapshot. The possible values include: &lt;code&gt;STARTED&lt;/code&gt;, &lt;code&gt;ABORTED&lt;/code&gt;, &lt;code&gt;PAUSED&lt;/code&gt;, &lt;code&gt;RESUMED&lt;/code&gt;, &lt;code&gt;IN_PROGRESS&lt;/code&gt;, &lt;code&gt;TABLE_SCAN_COMPLETED&lt;/code&gt;, and &lt;code&gt;COMPLETED&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;mysql_improvements&quot;&gt;MySQL improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Thanks to a contribution provided by Harvey Yue (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6472&quot;&gt;DBZ-6472&lt;/a&gt;), the MySQL connector will use parallelization to generate schema events during its snapshot phase. This should improve the overall performance when capturing the schema for many tables in your database. We plan to investigate how this can be extended to other relational connectors.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;mongodb_improvements&quot;&gt;MongoDB improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The MongoDB connector continues to see lots of active development. This release introduces several new features specifically for MongoDB, which include:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Cluster-wide privileges are no longer necessary when watching a single database or collection (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6182&quot;&gt;DBZ-6182&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Read preference taken from connection string (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6468&quot;&gt;DBZ-6468&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6578&quot;&gt;DBZ-6578&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support authentication with TC MongoDB deployments (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6596&quot;&gt;DBZ-6596&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As we continue to make further improvements to the MongoDB connector, please let us know if there are still rough edges or enhancements that will help streamline its usage.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;oracle_improvements&quot;&gt;Oracle improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.4 supports several new Oracle data types, which include &lt;code&gt;XML_TYPE&lt;/code&gt; and &lt;code&gt;RAW&lt;/code&gt; (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3605&quot;&gt;DBZ-3605&lt;/a&gt;). Two new Oracle dependencies were necessary to support XML: &lt;code&gt;xdb&lt;/code&gt; and &lt;code&gt;xmlparserv2&lt;/code&gt;. These dependencies are not redistributable, so they&amp;#8217;re not included in the connector plugin archive by default, much like the connector&amp;#8217;s driver. You must obtain these directly from Maven Central or oracle, just like the driver dependency.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, XML works similarly to &lt;code&gt;CLOB&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; data types; therefore, the connector must be configured with &lt;code&gt;lob.enabled&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; to ingest XML changes. We&amp;#8217;d love to hear your feedback on this new feature as it&amp;#8217;s been requested for quite some time.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;jdbc_sink_improvements&quot;&gt;JDBC sink improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Thanks to a contribution from Nicholas Fwang (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6595&quot;&gt;DBZ-6595&lt;/a&gt;), the JDBC sink connector can now reference values from the change event&amp;#8217;s &lt;code&gt;source&lt;/code&gt; information block as a part of the connector&amp;#8217;s configuration property &lt;code&gt;table.name.format&lt;/code&gt;. If you want to reference such fields, simply use &lt;code&gt;${source.&amp;lt;field-name&amp;gt;}&lt;/code&gt; in the configuration, and the field&amp;#8217;s value will be used.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, Roman Kudryashov also contributed the ability to resolve a row&amp;#8217;s primary key from a header defined on the change event (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6602&quot;&gt;DBZ-6602&lt;/a&gt;). To use this new feature, specify the connector configuration property &lt;code&gt;primary.key.mode&lt;/code&gt; as &lt;code&gt;record_header&lt;/code&gt;. If the header value is a primitive type, you will need to define a &lt;code&gt;primary.key.fields&lt;/code&gt; configuration similar to how you would if the event&amp;#8217;s record key was a primitive. If the header value is a &lt;code&gt;struct&lt;/code&gt; type, all fields of the structure will be used by default, but specifying the &lt;code&gt;primary.key.fields&lt;/code&gt; property allows you to choose a subset of fields from the header as the key.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;spanner_improvements&quot;&gt;Spanner improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It was possible due to certain conditions that a Spanner connector may not advance from the &lt;code&gt;START_INITIAL_SYNC&lt;/code&gt; state during initialization. After investigation by Nancy Xu, a new configuration option was introduced to supply a configurable timeout. This can be done by adding the following to the connector&amp;#8217;s configuration:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;connector.spanner.task.await.initialization.timeout=&amp;lt;timeout in milliseconds&amp;gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;debezium_ui_metrics&quot;&gt;Debezium UI metrics&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium UI project allows you to easily deploy any Debezium connector onto Kafka Connect using a web-based interface. This release has improved the interface by including several connector metrics (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5321&quot;&gt;DBZ-5321&lt;/a&gt;) on the main connector listing view. We&amp;#8217;d love your feedback on this change and welcome any suggestions on other metrics you may find useful.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other-changes&quot;&gt;Other fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, there were quite a number of stability and bug fixes that made it into this release. These include the following:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Mysql connector fails to parse statement FLUSH FIREWALL_RULES &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3925&quot;&gt;DBZ-3925&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add the API endpoint to expose running connector metrics &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5359&quot;&gt;DBZ-5359&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Display critical connector metrics &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5360&quot;&gt;DBZ-5360&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Snapshot result not saved if LAST record is filtered out &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5464&quot;&gt;DBZ-5464&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Define and document schema history topic messages schema &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5518&quot;&gt;DBZ-5518&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Align query.fetch.size across connectors &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5676&quot;&gt;DBZ-5676&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade to Apache Kafka 3.5.0 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6047&quot;&gt;DBZ-6047&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Remove downstream related code from UI Frontend code &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6394&quot;&gt;DBZ-6394&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Make Signal actions extensible &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6417&quot;&gt;DBZ-6417&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CloudEventsConverter throws static error on Kafka Connect 3.5+ &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6517&quot;&gt;DBZ-6517&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Dependency io.debezium:debezium-testing-testcontainers affects logback in tests &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6525&quot;&gt;DBZ-6525&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cleanup duplicate jobs from jenkins &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6535&quot;&gt;DBZ-6535&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Implement sharded MongoDB ocp deployment and integration tests &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6538&quot;&gt;DBZ-6538&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Batches with DELETE statement first will skip everything else &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6576&quot;&gt;DBZ-6576&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle unsupported DDL statement - drop multiple partitions &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6585&quot;&gt;DBZ-6585&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Only Struct objects supported for [Header field insertion], found: null &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6588&quot;&gt;DBZ-6588&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support PostgreSQL coercion for UUID, JSON, and JSONB data types &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6589&quot;&gt;DBZ-6589&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL parser cannot parse CAST AS dec &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6590&quot;&gt;DBZ-6590&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Refactor retry handling in Redis schema history &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6594&quot;&gt;DBZ-6594&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Excessive Log Message 'Marking Processed Record for Topic' &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6597&quot;&gt;DBZ-6597&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support for custom tags in the connector metrics &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6603&quot;&gt;DBZ-6603&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Fixed DataCollections for table scan completion notification &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6605&quot;&gt;DBZ-6605&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle connector is not recoverable if ORA-01327 is wrapped by another JDBC or Oracle exception &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6610&quot;&gt;DBZ-6610&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Fatal error when parsing Mysql (Percona 5.7.39-42) procedure &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6613&quot;&gt;DBZ-6613&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Build of Potgres connector fails when building against Kafka 2.X &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6614&quot;&gt;DBZ-6614&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade postgresql driver to v42.6.0 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6619&quot;&gt;DBZ-6619&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL ALTER USER with RETAIN CURRENT PASSWORD fails with parsing exception &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6622&quot;&gt;DBZ-6622&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade Quarkus to 3.2.0.Final &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6626&quot;&gt;DBZ-6626&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Inaccurate documentation regarding additional-condition &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6628&quot;&gt;DBZ-6628&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle connection SQLRecoverableExceptions are not retried by default &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6633&quot;&gt;DBZ-6633&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade kcctl to 1.0.0.Beta3 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6642&quot;&gt;DBZ-6642&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot delete non-null interval value &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6648&quot;&gt;DBZ-6648&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade gRPC to 1.56.1 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6649&quot;&gt;DBZ-6649&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ConcurrentModificationException thrown in Debezium 2.3 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6650&quot;&gt;DBZ-6650&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Dbz crashes on parsing Mysql Procedure Code (Statement Labels) &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6651&quot;&gt;DBZ-6651&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CloudEvents converter is broken for JSON message deserialization &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6654&quot;&gt;DBZ-6654&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Vitess: Connector fails if table name is a mysql reserved word &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6656&quot;&gt;DBZ-6656&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Junit conflicts cause by test-containers module using transitive Junit5 from quarkus &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6659&quot;&gt;DBZ-6659&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Disable Kafka 2.x CRON trigger &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6667&quot;&gt;DBZ-6667&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.4.0.Alpha1%20ORDER%20BY%20component%20ASC&quot;&gt;59 issues&lt;/a&gt; were fixed for this release. A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/adamstrickland&quot;&gt;Adam Strickland&lt;/a&gt;, &lt;a href=&quot;https://github.com/aozmen121&quot;&gt;Alisa Houskova&lt;/a&gt;, &lt;a href=&quot;https://github.com/AnatolyPopov&quot;&gt;Anatolii Popov&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/maxant&quot;&gt;Ant Kutschera&lt;/a&gt;, &lt;a href=&quot;https://github.com/Artgyk&quot;&gt;Artur Gukasian&lt;/a&gt;, &lt;a href=&quot;https://github.com/bdbene&quot;&gt;Balint Bene&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/blcksrx&quot;&gt;Hossein Torabi&lt;/a&gt;, &lt;a href=&quot;https://github.com/indraraj&quot;&gt;Indra Shukla&lt;/a&gt;, &lt;a href=&quot;https://github.com/nicholas-fwang&quot;&gt;Inki Hwang&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/mfvitale&quot;&gt;Mario Fiore Vitale&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/nancyxu123&quot;&gt;Nancy Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/obabec&quot;&gt;Ondrej Babec&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/jaegwonseo&quot;&gt;Seo Jae-kwon&lt;/a&gt;, &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Stefan Miklosovic&lt;/a&gt;, &lt;a href=&quot;https://github.com/twthorn&quot;&gt;Thomas Thornton&lt;/a&gt;, and &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This initial release of Debezium 2.4 is already packed with lots of new features and the team is only getting started. Looking at our &lt;a href=&quot;https://debezium.io/roadmap&quot;&gt;road map&lt;/a&gt;, we&amp;#8217;ve already tackled nearly half of our plans for 2.4, but much still remains including:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Single message transforms for TimescaleDB and Timestamps&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;OpenLogReplicator ingestion for Oracle&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Ad-hoc blocking snapshots&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Parallelization of Debezium Embedded&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Parallel incremental snapshots for MongoDB&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Further improvements to Debezium UI&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We intend to stick to our approximate two week cadence, so expect Alpha2 at the start of August. Until then, please be sure to get in touch with us on the &lt;a href=&quot;https://groups.google.com/g/debezium&quot;&gt;mailing list&lt;/a&gt; or our &lt;a href=&quot;https://debezium.zulipchat.com/login/#narrow/stream/302529-users&quot;&gt;chat&lt;/a&gt; if you have any ideas or suggestions.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</description> <pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/07/17/debezium-2-4-alpha1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/07/17/debezium-2-4-alpha1-released/</guid> </item> <item> <title>Debezium signaling and notifications - Part 2: Customisation</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Welcome to this series of articles dedicated to signaling and notifications in Debezium! This post serves as the second installment in the series, where we will discuss how to customize the signal and notification channels in Debezium.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 introduced new improvements in signaling and notification capabilities. You can set up new signals and notification channels in addition to the pre-defined signals and notification channels offered by Debezium. This feature enables users to customize the system to suit their unique needs and combine it with their existing infrastructure or third-party solutions. It enables effective monitoring and a proactive response to data changes by precisely capturing and communicating signal events and triggering notifications through preferred channels.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The first article in this series, &lt;a href=&quot;https://debezium.io/blog/2023/06/27/Debezium-signaling-and-notifications/&quot;&gt;Signaling and Notifications in Debezium&lt;/a&gt;, provides an overview of the signaling and notification features in Debezium. It also discusses the available channels &amp;amp; their use cases for various scenarios.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/07/10/custom-http-signaling-notification/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/07/10/custom-http-signaling-notification/</guid> </item> <item> <title>Debezium for Oracle - Part 3: Performance and Debugging</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This post is the final part of a 3-part series to explore using Debezium to ingest changes from an Oracle database using Oracle LogMiner. In case you missed it, the first installment of this series is found &lt;a href=&quot;/blog/2022/09/30/debezium-oracle-series-part-1/&quot;&gt;here&lt;/a&gt; and the second installment is found &lt;a href=&quot;/blog/2022/10/06/debezium-oracle-series-part-2&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this third and final installment, we are going to build on what we have done in the previous two posts, focusing on the following areas:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#performance&quot;&gt;Performance optimizations&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#debugging&quot;&gt;How to debug and assess problems and how to resolve them&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;</description> <pubDate>Thu, 29 Jun 2023 12:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/06/29/debezium-oracle-series-part-3/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/29/debezium-oracle-series-part-3/</guid> </item> <item> <title>Debezium signaling and notifications - Part 1</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Welcome to this series of articles dedicated to signaling and notifications in Debezium! This post serves as the first installment in the series, where we will introduce the signaling and notification features offered by Debezium and discuss the available channels for interacting with the platform.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In the subsequent parts of this series, we will delve deeper into customizing signaling channels and explore additional topics such as JMX signaling and notifications.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Tue, 27 Jun 2023 10:11:11 +0000</pubDate> <link>https://debezium.io/blog/2023/06/27/Debezium-signaling-and-notifications/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/27/Debezium-signaling-and-notifications/</guid> </item> <item> <title>Towards Debezium exactly-once delivery</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Every now and then there is a questions in the Debezium &lt;a href=&quot;https://debezium.zulipchat.com/#narrow/stream/302529-users&quot;&gt;chat&lt;/a&gt; or on the &lt;a href=&quot;https://groups.google.com/forum/#!forum/debezium&quot;&gt;mailing list&lt;/a&gt; how to ensure exactly-once delivery of the records produced by Debezium. So far Debezium aimed only for at-least-once delivery. This means Debezium guarantees every single change will be delivered and there is no missing or skipped change event. However, in case of failures, restarts or DB connection drops, the same event can be delivered more than once. Typical scenario is that the event is delivered twice - once before failure/restart and second time after that. Exactly-once delivery (or semantic) provides stronger guarantee - every single message will be delivered and at the same time there won&amp;#8217;t be any duplicates, every single message will be delivered exactly once. So far our answer was that the users have to implement their own deduplication system if they need exactly-once delivery. However, with Kafka Connect support for exactly-once delivery, it seems we can provide exactly-once delivery for Debezium connectors out-of-the-box, only with a little configuration change.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Thu, 22 Jun 2023 01:20:00 +0000</pubDate> <link>https://debezium.io/blog/2023/06/22/towards-exactly-once-delivery/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/22/towards-exactly-once-delivery/</guid> </item> <item> <title>Debezium 2.3.0.Final Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The team has been quite busy these last couple months preparing for a condensed release timeline for Debezium 2.3, and I am thrilled to announce that the next installment has arrived, Debezium &lt;strong&gt;2.3.0.Final&lt;/strong&gt; is now available!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Despite a condensed release schedule, this release is packed with tons of new features and improvements. Debezium 2.3 includes a brand-new notification subsystem, a rewrite of the signal subsystem to support additional means to send signals to Debezium connectors, the introduction of the JDBC storage module to maintain Debezium state in relational databases, parallelization of Vitess shard processing, PostgreSQL connector replica identity improvements, a brand-new Debezium Server operator for Kubernetes, support for exactly-once semantics for the PostgreSQL connector, and improvements to the Oracle connector.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take a few moments and talk about any breaking changes and all these improvements and why they&amp;#8217;re so important!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#breaking-changes&quot;&gt;Breaking changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#new-features&quot;&gt;New features and improvements&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#other-fixes&quot;&gt;Other changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#whats-next&quot;&gt;What&amp;#8217;s next&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You can also find a full list of changes in Debezium 2.3&amp;#8217;s &lt;a href=&quot;https://debezium.io/releases/2.3/release-notes&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;breaking-changes&quot;&gt;Breaking changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We generally attempt to avoid as many breaking changes across minor releases as possible, but unfortunately sometimes such changes are inevitable, particularly if a feature may have been introduced as &lt;em&gt;experimental&lt;/em&gt;. Debezium 2.3 introduces two breaking changes depending on whether you are upgrading from a preview release or an earlier stable version:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#postgresql-mysql-secure-connection-changes&quot;&gt;PostgreSQL / MySQL secure connection changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#jdbc-storage-encoding-changes&quot;&gt;JDBC storage encoding changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;postgresql-mysql-secure-connection-changes&quot;&gt;PostgreSQL / MySQL secure connection changes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium for PostgreSQL and MySQL can be configured to use a secured SSL connection. For PostgreSQL, this can be done by configuring &lt;a href=&quot;https://debezium.io/documentation/reference/2.3/connectors/postgresql.html#postgresql-property-database-sslmode&quot;&gt;&lt;code&gt;database.sslmode&lt;/code&gt;&lt;/a&gt; while for MySQL this can be done with &lt;a href=&quot;https://debezium.io/documentation/reference/2.3/connectors/mysql.html#mysql-property-database-ssl-mode&quot;&gt;&lt;code&gt;database.ssl.mode&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With Debezium 2.3, this configuration option no longer defaults to &lt;code&gt;disable&lt;/code&gt; (PostgreSQL) or &lt;code&gt;disabled&lt;/code&gt; (MySQL) but instead defaults to &lt;code&gt;prefer&lt;/code&gt; (PostgreSQL) and &lt;code&gt;preferred&lt;/code&gt; (MySQL). This means that when attempting to connect using an encrypted, secure connection is unavailable, the connector will fallback to using an unsecured connection by default unless configured otherwise.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;jdbc-storage-encoding-changes&quot;&gt;JDBC storage encoding changes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3.0.alpha1 introduced the new &lt;em&gt;experimental&lt;/em&gt; JDBC storage module. This storage module defaulted to using UTF-16 as it&amp;#8217;s default encoding; however, most databases prefer UTF-8 as a default. If you are upgrading from Debezium 2.3.0.Alpha1, Debezium 2.3.0.Beta1 and later now use UTF-8 when storing data using the JDBC storage module to align with typical database defaults.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;new-features&quot;&gt;New features and improvements&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 includes a plethora of new features improvements, which include the following:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#debezium-server-operator&quot;&gt;Debezium Server Operator for Kubernetes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#notifications&quot;&gt;New notification subsystem&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#signals&quot;&gt;New extensible signal subsystem with new channels&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#jmx-signals-notifications&quot;&gt;JMX signal and notification integration&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#jdbc-storage&quot;&gt;New JDBC storage module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#exactly-once-delivery&quot;&gt;Exactly once delivery for PostgreSQL streaming&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#replica-identity&quot;&gt;PostgreSQL replica identity changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#rac-specify-sid&quot;&gt;Oracle RAC improvements&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;debezium-server-operator&quot;&gt;Debezium Server Operator for Kubernetes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release introduces a &lt;em&gt;preview&lt;/em&gt; version of the new Debezium Operator, providing the ability to deploy and manage Debezium Server instances within Kubernetes. Debezium Server allows you to stream change events from your data sources to a wide variety of messaging infrastructures. Our goal is to provide a Kafka-less alternative for the Debezium community who wish to utilize Kubernetes for scalability and high availability deployments.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Presently, the documentation is sparse as the operator is in early incubation stages; however, we do intend to improve upon this in upcoming release cycles. You can find a &lt;a href=&quot;https://github.com/debezium/debezium-operator#quickstart-example&quot;&gt;deployment example&lt;/a&gt; and basic description of the &lt;a href=&quot;https://github.com/debezium/debezium-operator#debeziumserverspec-reference&quot;&gt;custom resource specification&lt;/a&gt; in the github repository that you can use as a reference for the short-term.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We do not recommend a production deployment of this component at this time; however, we encourage users to provide community feedback. The feedback will be valuable in evaluating if the component is feature ready or if there are still areas of improvement to meet everyone&amp;#8217;s needs.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;notifications&quot;&gt;New notification subsystem&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 introduces a brand-new feature called notifications, allowing Debezium to emit events that can be consumed by any external system to know the status of various stages of Debezium&amp;#8217;s lifecycle.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Notification events are represented as a series of key/value tuples, with a structure that contains several out-of-the-box fields. The following is an example of a simple notification event.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Example Notification Event&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;c485ccc3-16ff-47cc-b4e8-b56a57c3bad2&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;aggregate_type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Snapshot&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Started&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;additional_data&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Each notification event consists of an &lt;code&gt;id&lt;/code&gt; field, a UUID to identify the notification, an &lt;code&gt;aggregate_type&lt;/code&gt; field to which the notification is related based on the concept of domain-driven design, a &lt;code&gt;type&lt;/code&gt; field that is mean to given more detail about the aggregate type itself, and an optional &lt;code&gt;additional_data&lt;/code&gt; field which consists of a map of string-based key/value pairs with additional information about the event.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;At this time, there are two notification event types supported by Debezium:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Status of the initial snapshot&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Monitoring of the incremental snapshot&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;initial_snapshot_notifications&quot;&gt;Initial Snapshot Notifications&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;An initial snapshot is the consistent capture of the existing data when a connector first starts. An initial snapshot event will have an aggregate type with the value of &lt;code&gt;&quot;Initial Snapshot&quot;&lt;/code&gt; and the type of event will consist of one of three logical values:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;dlist&quot;&gt; &lt;dl&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;SKIPPED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Represents the initial snapshot was skipped.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;ABORTED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Represents the initial snapshot was aborted.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;COMPLETED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Represents the initial snapshot has concluded successfully.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The following is an example of a notification about the completion of the initial snapshot:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Example snapshot completed event&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;5563ae14-49f8-4579-9641-c1bbc2d76f99&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;aggregate_type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Initial Snapshot&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;COMPLETED&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;incremental_snapshot_notifications&quot;&gt;Incremental Snapshot Notifications&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;An incremental snapshot is a capture of the existing data from a configured set of tables while the connector is actively streaming changes. An incremental snapshot event will have an aggregate type with the value of &lt;code&gt;&quot;Incremental Snapshot&quot;&lt;/code&gt; and the type will consist of one of several logical values:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;dlist&quot;&gt; &lt;dl&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;STARTED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot has started.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;PAUSED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot has been temporarily paused.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;RESUMED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot that had been paused has now resumed.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;STOPPED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot has stopped.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;IN_PROGRESS&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot is in-progress.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;TABLE_SCAN_COMPLETED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot has concluded for a given table.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;COMPLETED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates that an incremental snapshot has concluded for all tables.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;configuring_notifications&quot;&gt;Configuring Notifications&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium notifications are configured via the connector&amp;#8217;s configuration. The following examples show how to configure the out-of-the-box Kafka Topic or Log based channels.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Using a Kafka Topic&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;notification.enable.channels&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;sink&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;notification.sink.topic.name&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;debezium_notifications&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Using the connector logs&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;notification.enable.channels&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;signals&quot;&gt;New extensible signal subsystem&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium has supported the concept of a signal since the introduction of the Incremental Snapshot feature well back in Debezium 1.x. Signals are important as it allows you to provide metadata to instruct Debezium to perform a given task, whether that task is to write an entry to the connector log or perform an ad-hoc incremental snapshot.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In Debezium 2.3, the signal subsystem was reworked to introduce the concept called &lt;em&gt;channel&lt;/em&gt;, which represents a medium for which Debezium watches or listens and reacts to signals. In previous versions, there was one channel supported universally across connectors, which was the database signal table. In this release, these channels have been unified and the following are available out of the box:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Database signal table&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Kafka signal topic&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Filesystem&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JMX&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;But that&amp;#8217;s not all, the signal channel contract is extensible, allowing you to write a custom implementation and make that available to your connectors with ease.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;jmx-signals-notifications&quot;&gt;JMX signals and notifications integration&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 previously introduced both a new signal channel and notification feature. This feature allows external applications to easily integrate with Debezium, sending signals to perform various tasks such as ad-hoc incremental snapshots, and to receive notifications about the progress of such tasks. This release builds on top of that functionality to allow the ability to send signals and receive notifications via JMX.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;sending_signals&quot;&gt;Sending signals&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, the signal channel subsystem has been improved to support sending signals via JMX. From the &lt;code&gt;jconsole&lt;/code&gt; window, you can now see there are two new subsections for a connector, a notifications and signal section shown below:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock imageblock centered-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/jconsole-signal-notifications.png&quot; class=&quot;responsive-image&quot; alt=&quot;JConsole JMX metrics&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The new &lt;code&gt;signals&lt;/code&gt; section allows you to invoke an operation on the JMX bean in order to transmit a signal to Debezium. This signal resembles the logical signal table structure where it accepts 3 parameters, a unique identifier, the signal type, and finally the signal payload. The following illustrates what this looks like from &lt;code&gt;jconsole&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock imageblock centered-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/jconsole-send-signal.png&quot; class=&quot;responsive-image&quot; alt=&quot;JConsole Sending Signals&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;receiving_notifications&quot;&gt;Receiving notifications&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The new &lt;code&gt;notifications&lt;/code&gt; section allows you to receive and react to notifications captured by the JMX bean from Debezium. The Debezium JMX bean will buffer all notifications to ensure that no notification is missed. The following illustrates what this looks like from &lt;code&gt;jconsole&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock imageblock centered-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/jconsole-receive-notification.png&quot; class=&quot;responsive-image&quot; alt=&quot;JConsole Receive Notifications&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock note&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The JMX bean does not automatically clear the notification queue. In order to avoid memory concerns, be sure to invoke the &lt;code&gt;reset&lt;/code&gt; method on the notifications bean once you&amp;#8217;ve processed all notifications.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We look forward to your feedback on this new way to integrate signals and notifications with Debezium over JMX.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;jdbc-storage&quot;&gt;New JDBC storage subsystem&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 introduces a new storage module implementation supporting the persistence of schema history and offset data in a datastore via JDBC. For environments where you may not have easy access to persistent filesystems, this offers yet another alternative for storage via a remote, persistent storage platform.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In order to take advantage of this new module, the following dependency must be added to your project or application:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Maven coordinates&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.debezium&lt;span class=&quot;tag&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;debezium-storage-jdbc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.3.0.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The following examples show how to configure Offset or Schema History storage via the JDBC storage module:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Configuration example for Offset JDBC storage&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;offset.storage.jdbc.url&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;&amp;lt;jdbc-connection-url&amp;gt;&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;offset.storage.jdbc.user&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;dbuser&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;offset.storage.jdbc.password&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;offset.storage.jdbc.offset_table_name&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;debezium_offset_storage&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Configuration example for Schema History JDBC storage&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema.history.internal.jdbc.url&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;&amp;lt;jdbc-connection-url&amp;gt;&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema.history.internal.jdbc.user&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;dbuser&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema.history.internal.jdbc.password&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema.history.internal.jdbc.schema.history.table.name&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;debezium_database_history&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;exactly-once-delivery&quot;&gt;Exactly once delivery for PostgreSQL streaming&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium has traditionally been an at-least-once delivery solution, guaranteeing that no change is ever missed. Exactly-Once is a proposal by the Apache Kafka community as a part of &lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/KIP-618%3A+Exactly-Once+Support+for+Source+Connectors&quot;&gt;KIP-618&lt;/a&gt;. This proposal aims to address a common problem with producers (source connectors) when a producer retries, it may re-send a batch of events to the Kafka broker even if that batch had already been committed by the broker. This means there are situations where duplicate events may be sent and not every consumer (sink connector) may be capable of handling such situations easily.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium plans to roll out exactly-once delivery semantics in a phased style. There are specific corner cases around snapshotting and streaming and these can vary by connector. And with that, Debezium 2.3 starts out by specifically only adding support for exactly-once semantics for the PostgreSQL during its &lt;em&gt;streaming phase&lt;/em&gt; only!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In order to take advantage of exactly-once delivery, there is no connector configuration changes required; however, your Kafka Connect worker configuration will need to be adjusted to enable this feature. You can find a reference to the new configuration properties in &lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/KIP-618%3A+Exactly-Once+Support+for+Source+Connectors#KIP618:ExactlyOnceSupportforSourceConnectors-Newproperties&quot;&gt;KIP-618&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock note&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If you are mixing connectors on the same connect cluster that do and do not support exactly once delivery, you will not be able to set &lt;code&gt;exactly.once.support&lt;/code&gt; in the worker configuration to &lt;code&gt;required&lt;/code&gt; as this will cause connectors that do not support this feature to fail validation at start-up.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;replica-identity&quot;&gt;PostgreSQL replica identity changes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 introduces a new PostgreSQL connector feature called &quot;Autoset Replica Identity&quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Replica identity is PostgreSQL&amp;#8217;s way to identify what columns are captured in the database transaction logs for inserts, updates, and deletes. This new feature allows configuring a table&amp;#8217;s replica identity via connector configuration and delegating the responsibility of setting this configuration to the connector at start-up.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The new configuration option, &lt;code&gt;replica.identity.autoset.values&lt;/code&gt;, specifies a comma-separated list of table and replica identity tuples. If the table already has a given replica identity, the identity will be overwritten to match what is specified in this configuration if the table is included. PostgreSQL supports several replica identity types, more information on these can be found in the &lt;a href=&quot;https://debezium.io/documentation/reference/2.3/connectors/postgresql.html#postgresql-replica-identity&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When specifying the &lt;code&gt;replica.identity.autoset.values&lt;/code&gt;, the value is a comma-separated list of values where each element uses the format of &lt;code&gt;&amp;lt;fully-qualified-table-name&amp;gt;:&amp;lt;replica-identity&amp;gt;&lt;/code&gt;. An example is shown below where two tables are configured to have full replica identity:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;replica.identity.autoset.values&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;public.table1:FULL,public.table2:FULL&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;rac-specify-sid&quot;&gt;Oracle RAC improvements&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When connecting to an Oracle RAC installation, you must specify a &lt;code&gt;rac.nodes&lt;/code&gt; configuration property with a minimum of the host or IP address of all individual nodes across the cluster. Older versions of the connector also supported a varied format, allowing the inclusion of a port for each node as not every node on the cluster may use the same port.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 improves the Oracle RAC support by also acknowledging that each node may not necessarily use the same Oracle Site Identifier (SID), and therefore, the SID can also now be included in the &lt;code&gt;rac.nodes&lt;/code&gt; configuration property to support such installations.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The following example illustrates connecting to two Oracle RAC nodes, each using different ports and SID parameters:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;An example configuration&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;connector.class&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;io.debezium.connector.oracle.OracleConnector&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;rac.nodes&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;host1.domain.com:1521/ORCLSID1,host2.domain.com:1522/ORCLSID2&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other-fixes&quot;&gt;Other fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;There were quite a number of bugfixes and stability changes in this release, some noteworthy are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Debezium Server stops sending events to Google Cloud Pub/Sub &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5175&quot;&gt;DBZ-5175&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Toasted varying character array and date array are not correcly processed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6122&quot;&gt;DBZ-6122&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade to Infinispan 14.0.11.Final to fix CVE-2022-45047 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6193&quot;&gt;DBZ-6193&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Introduce LogMiner query filtering modes &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6254&quot;&gt;DBZ-6254&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Lock contention on LOG_MINING_FLUSH table when multiple connectors deployed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6256&quot;&gt;DBZ-6256&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Ensure that the connector can start from a stale timestamp more than one hour into the past &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6307&quot;&gt;DBZ-6307&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The rs_id field is null in Oracle change event source information block &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6329&quot;&gt;DBZ-6329&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add JWT authentication to HTTP Client &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6348&quot;&gt;DBZ-6348&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Using pg_replication_slot_advance which is not supported by PostgreSQL10. &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6353&quot;&gt;DBZ-6353&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;log.mining.transaction.retention.hours should reference last offset and not sysdate &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6355&quot;&gt;DBZ-6355&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support multiple tasks when streaming shard list &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6365&quot;&gt;DBZ-6365&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Code Improvements for skip.messages.without.change &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6366&quot;&gt;DBZ-6366&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Kinesis Sink - AWS Credentials Provider &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6372&quot;&gt;DBZ-6372&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Toasted hstore are not correctly processed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6379&quot;&gt;DBZ-6379&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle DDL shrink space for table partition can not be parsed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6386&quot;&gt;DBZ-6386&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;__source_ts_ms r (read) operation date is set to future for SQL Server &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6388&quot;&gt;DBZ-6388&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;PostgreSQL connector task fails to resume streaming because replication slot is active &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6396&quot;&gt;DBZ-6396&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Date and Time values without timezones are not persisted correctly based on database.time_zone &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6399&quot;&gt;DBZ-6399&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MongoDB connector crashes on invalid resume token &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6402&quot;&gt;DBZ-6402&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Snapshot step 5 - Reading structure of captured tables time too long &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6439&quot;&gt;DBZ-6439&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;NPE on read-only MySQL connector start up &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6440&quot;&gt;DBZ-6440&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle parallel snapshots do not properly set PDB context when using multitenancy &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6457&quot;&gt;DBZ-6457&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MariaDB] Add support for userstat plugin keywords &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6459&quot;&gt;DBZ-6459&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium Server cannot recover from Google Pub/Sub errors &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6461&quot;&gt;DBZ-6461&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&quot;Ignoring invalid task provided offset&quot; &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6463&quot;&gt;DBZ-6463&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle snapshot.include.collection.list should be prefixed with databaseName in documentation. &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6474&quot;&gt;DBZ-6474&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Db2 connector can fail with NPE on notification sending &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6485&quot;&gt;DBZ-6485&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ExtractNewRecordState SMT in combination with HeaderToValue SMT results in Unexpected field name exception &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6486&quot;&gt;DBZ-6486&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;BigDecimal fails when queue memory size limit is in place &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6490&quot;&gt;DBZ-6490&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Allow schema to be specified in the Debezium Sink Connector configuration &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6491&quot;&gt;DBZ-6491&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ORACLE table can not be captured, got runtime.NoViableAltException &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6492&quot;&gt;DBZ-6492&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Signal poll interval has incorrect default value &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6496&quot;&gt;DBZ-6496&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle JDBC driver 23.x throws ORA-18716 - not in any time zone &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6502&quot;&gt;DBZ-6502&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Alpine postgres images should use llvm/clang 15 explicitly &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6506&quot;&gt;DBZ-6506&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;FileSignalChannel is not loaded &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6509&quot;&gt;DBZ-6509&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Utilize event.processing.failure.handling.mode in Vitess replication connection &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6510&quot;&gt;DBZ-6510&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySqlReadOnlyIncrementalSnapshotChangeEventSource enforces Kafka dependency during initialization &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6511&quot;&gt;DBZ-6511&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium incremental snapshot chunk size documentation unclear or incorrect &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6512&quot;&gt;DBZ-6512&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Error value of negative seconds in convertOracleIntervalDaySecond &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6513&quot;&gt;DBZ-6513&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium incremental snapshot chunk size documentation unclear or incorrect &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6515&quot;&gt;DBZ-6515&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Only use error processing mode on certain errors &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6523&quot;&gt;DBZ-6523&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[PostgreSQL] LTree data is not being captured by streaming &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6524&quot;&gt;DBZ-6524&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle Connector: Snapshot fails with specific combination &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6528&quot;&gt;DBZ-6528&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use better hashing function for PartitionRouting &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6529&quot;&gt;DBZ-6529&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Table order is incorrect on snapshots &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6533&quot;&gt;DBZ-6533&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Start publishing nightly images for Debezium Operator &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6541&quot;&gt;DBZ-6541&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Start releasing images for Debezium Operator &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6542&quot;&gt;DBZ-6542&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Unhandled NullPointerException in PartitionRouting will crash the whole connect plugin &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6543&quot;&gt;DBZ-6543&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Bug in field.name.adjustment.mode Property &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6559&quot;&gt;DBZ-6559&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Operator sets incorrect value of transformation.predicate when no predicate is specified &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6560&quot;&gt;DBZ-6560&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade MySQL JDBC driver to 8.0.33 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6563&quot;&gt;DBZ-6563&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade Google Cloud BOM to 26.17.0 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6570&quot;&gt;DBZ-6570&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Kubernetes-Config extension interferes with SSL tests due to k8 devservice starting up &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6574&quot;&gt;DBZ-6574&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL read-only connector with Kafka signals enabled fails on start up &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6579&quot;&gt;DBZ-6579&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Redis schema history can fail upon startup &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6580&quot;&gt;DBZ-6580&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20in%20(2.3.0.Alpha1%2C%202.3.0.Beta1%2C%202.3.0.CR1%2C%202.3.0.Final)%20ORDER%20BY%20component%20ASC&quot;&gt;138 issues&lt;/a&gt; were fixed for this release. A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/isacandrei&quot;&gt;Andrei Isac&lt;/a&gt;, &lt;a href=&quot;https://github.com/angsdey2&quot;&gt;Angshuman Dey&lt;/a&gt;, &lt;a href=&quot;https://github.com/adasari&quot;&gt;Anil Dasari&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/bpaquet&quot;&gt;Bertrand Paquet&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/brenoavm&quot;&gt;Breno Moreira&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/cjmencias&quot;&gt;Christian Jacob Mencias&lt;/a&gt;, &lt;a href=&quot;https://github.com/TechIsCool&quot;&gt;David Beck&lt;/a&gt;, &lt;a href=&quot;https://github.com/fredlegaucher&quot;&gt;Frederic Laurent&lt;/a&gt;, &lt;a href=&quot;https://github.com/ddsr-ops&quot;&gt;Gong Chang Hua&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/Hidetomi&quot;&gt;Hidetomi Umaki&lt;/a&gt;, &lt;a href=&quot;https://github.com/uidoyen&quot;&gt;Hussain Ansari&lt;/a&gt;, &lt;a href=&quot;https://github.com/indraraj&quot;&gt;Indra Shukla&lt;/a&gt;, &lt;a href=&quot;https://github.com/ismailsimsek&quot;&gt;Ismail Simsek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jehrenzweig-pi&quot;&gt;Jesse Ehrenzweig&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/joschi&quot;&gt;Jochen Schalanda&lt;/a&gt;, &lt;a href=&quot;https://github.com/subkanthi&quot;&gt;Kanthi Subramanian&lt;/a&gt;, &lt;a href=&quot;https://github.com/kgalieva&quot;&gt;Katerina Galieva&lt;/a&gt;, &lt;a href=&quot;https://github.com/mfvitale&quot;&gt;Mario Fiore Vitale&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/miguelbirdie&quot;&gt;Miguel Angel Sotomayor&lt;/a&gt;, &lt;a href=&quot;https://github.com/nancyxu123&quot;&gt;Nancy Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/nirolevy&quot;&gt;Nir Levy&lt;/a&gt;, &lt;a href=&quot;https://github.com/obabec&quot;&gt;Ondrej Babec&lt;/a&gt;, &lt;a href=&quot;https://github.com/zalmane&quot;&gt;Oren Elias&lt;/a&gt;, &lt;a href=&quot;https://github.com/rnowling-memphis&quot;&gt;RJ Nowling&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/ironakj&quot;&gt;Ronak Jain&lt;/a&gt;, &lt;a href=&quot;https://github.com/eizners&quot;&gt;Sergey Eizner&lt;/a&gt;, &lt;a href=&quot;https://github.com/ShuranZhang&quot;&gt;Shuran Zhang&lt;/a&gt;, &lt;a href=&quot;https://github.com/sclarkson-zoomcare&quot;&gt;Stephen Clarkson&lt;/a&gt;, &lt;a href=&quot;https://github.com/twthorn&quot;&gt;Thomas Thornton&lt;/a&gt;, &lt;a href=&quot;https://github.com/tommyk-gears&quot;&gt;Tommy Karlsson&lt;/a&gt;, &lt;a href=&quot;https://github.com/imtj1&quot;&gt;Tony Joseph&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/caicancai&quot;&gt;蔡灿材&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With Debezium 2.3 out, our major focus will be coordinating bugfixes to any reports for Debezium 2.3, but primarily on the upcoming new preview release for Debezium 2.4.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.4 is planned with a ton of changes, and we intend to tackle these changes in a bucketed fashion, with each bucket being assigned a priority. As with any schedule, priorities are subject to change but the following is an outline of what to expect:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;dlist&quot;&gt; &lt;dl&gt; &lt;dt class=&quot;hdlist1&quot;&gt;Priority 1&lt;/dt&gt; &lt;dd&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Core] TimescaleDB single message transformation support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Core] Timezone single message transformation to ease usages with Debezium temporal types&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Core] Initial snapshot notifications&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MongoDB] Database-wide change stream support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MongoDB] Multi-task deployment metrics support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Oracle] OpenLogReplicator adapter support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Oracle] XML, LONG, RAW, and LONG RAW data type support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Universal] Exactly-Once semantics support for other connectors&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Dependencies] Apache Kafka 3.5.x support&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;Priority 2&lt;/dt&gt; &lt;dd&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Operator] Next steps for Debezium operator&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Core] Ad-hoc blocking snapshot&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Dependencies] Use OpenTelemetry&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;Priority 3&lt;/dt&gt; &lt;dd&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Embedded Engine] Parallelization support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MongoDB] Parallel incremental snapshots support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MySQL] Parallel schema snapshots support&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This is not an exhaustive list and its quite ambitious, but given the shortened time with Debezium 2.3, we hope the extra few weeks on Debezium 2.4 will make this next minor release possible with all these features and much more. The roadmap will be updated this week to align with the above for Debezium 2.4 and the future, so please be sure to get in touch with us on the &lt;a href=&quot;https://groups.google.com/g/debezium&quot;&gt;mailing list&lt;/a&gt; or our &lt;a href=&quot;https://debezium.zulipchat.com/login/#narrow/stream/302529-users&quot;&gt;chat&lt;/a&gt; if you have any ideas or suggestions.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Otherwise, I expect with summer in full swing for those of us in the north, holidays and much-deserved time-off will be normal for the next several months. To those who travel or intend to take some time for yourselves and family, enjoy and be safe!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Until next time&amp;#8230;&amp;#8203;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</description> <pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/06/21/debezium-2-3-final-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/21/debezium-2-3-final-released/</guid> </item> <item> <title>Debezium 2.3.0.CR1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It is my pleasure to announce the next Debezium 2.3 release, &lt;strong&gt;2.3.0.CR1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The main focus of this release is to stabilize the Debezium 2.3 release in preparation for a final release in the coming weeks, which typically means we&amp;#8217;re focusing on bugfixes; however, this release includes two new features. Lets take a moment and dive into these new features and any bug fixes that are noteworthy!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/06/12/debezium-2-3-cr1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/12/debezium-2-3-cr1-released/</guid> </item> <item> <title>Debezium 2.3.0.Beta1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s my pleasure to announce the next release of the Debezium 2.3 series, &lt;strong&gt;2.3.0.Beta1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;While this release focuses primarily on bug fixes and stability improvements, there are some new improvements with the PostgreSQL connector and the new notification and channels subsystem. In addition, there are also some compatibility breaking changes.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release contains changes for &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.3.0.Beta1%20ORDER%20BY%20issuetype%20DESC&quot;&gt;22 issues&lt;/a&gt;, so lets take a moment and dive into the new features and any potential bug fixes or breaking changes that are noteworthy!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/05/29/debezium-2-3-beta1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/05/29/debezium-2-3-beta1-released/</guid> </item> <item> <title>Debezium 2.3.0.Alpha1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s my pleasure to announce the first release of the Debezium 2.3 series, &lt;strong&gt;2.3.0.Alpha1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release brings many new and exciting features as well as bug fixes, including Debezium status notifications, storage of Debezium state into a JDBC data store, configurable signaling channels, the ability to edit connector configurations via Debezium UI, the parallelization of Vitess shards processing, and much more.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release contains changes for &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.3.0.Alpha1%20ORDER%20BY%20issuetype%20DESC&quot;&gt;59 issues&lt;/a&gt;, so lets take a moment and dive into several of these new features and any potential bug fixes or breaking changes that are noteworthy!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/05/15/debezium-2-3-alpha1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/05/15/debezium-2-3-alpha1-released/</guid> </item> <item> <title>Image classification with Debezium and TensorFlow</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With the recent success of ChatGPT, we can observe another wave of interest in the AI field and machine learning in general. The previous wave of interest in this field was, at least to a certain extent, caused by the fact that excellent ML frameworks like &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt;, &lt;a href=&quot;https://pytorch.org/&quot;&gt;PyTorch&lt;/a&gt; or general data processing frameworks like &lt;a href=&quot;https://spark.apache.org/&quot;&gt;Spark&lt;/a&gt; became available and made the writing of ML models much more straightforward. Since that time, these frameworks have matured, and writing models are even more accessible, as you will see later in this blog. However, data set preparation and gathering data from various sources can sometimes take time and effort. Creating a complete pipeline that would pull existing or newly created data, adjust it, and ingest it into selected ML libraries can be challenging. Let&amp;#8217;s investigate if Debezium can help with this task and explore how we can leverage Debezium&amp;#8217;s capabilities to make it easier.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Tue, 02 May 2023 11:20:00 +0000</pubDate> <link>https://debezium.io/blog/2023/05/02/tensorflow-mnist-classification/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/05/02/tensorflow-mnist-classification/</guid> </item> <item> <title>New Debezium images will be available only Quay.io in the future</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As you may have noticed, the Docker company recently announced a reduction of the free organization accounts offering. The Docker company wanted to provide for free organization accounts only for &lt;a href=&quot;https://www.docker.com/community/open-source/application/&quot;&gt;Docker-Sponsored Open Source (DSOS) projects&lt;/a&gt;. Debezium project doesn&amp;#8217;t meet their definition of open source project as we have a pathway to commercialization. As the accounts ought to be terminated in 30 days, we immediately started to work on moving out the Debezium project from Docker Hub.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Tue, 25 Apr 2023 10:11:11 +0000</pubDate> <link>https://debezium.io/blog/2023/04/25/container-images-quayio/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/04/25/container-images-quayio/</guid> </item> </channel> </rss>